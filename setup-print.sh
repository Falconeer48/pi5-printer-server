#!/bin/bash

# Setup script for print-to-imac functionality
# This script helps configure the printing setup

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="$SCRIPT_DIR/print-config.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

print_status "$BLUE" "🖨️  Setting up print-to-imac functionality..."
echo ""

# Check if config file exists
if [ -f "$CONFIG_FILE" ]; then
    print_status "$YELLOW" "⚠️  Configuration file already exists: $CONFIG_FILE"
    read -r -p "Do you want to reconfigure? (y/N): " -n 1
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_status "$GREEN" "✅ Using existing configuration"
        exit 0
    fi
fi

print_status "$BLUE" "📝 Please provide the following information:"
echo ""

# Get iMac details
read -r -p "iMac username (default: ian): " imac_user
imac_user=${imac_user:-ian}

read -r -p "iMac IP address (default: 192.168.50.242): " imac_host
imac_host=${imac_host:-192.168.50.242}

read -r -p "SSH key path (default: ~/.ssh/id_ed25519): " ssh_key
ssh_key=${ssh_key:-~/.ssh/id_ed25519}

# Test connection
print_status "$BLUE" "🔍 Testing connection to iMac..."
if ping -c 1 -W 3 "$imac_host" >/dev/null 2>&1; then
    print_status "$GREEN" "✅ iMac is reachable"
else
    print_status "$RED" "❌ Cannot reach iMac at $imac_host"
    print_status "$YELLOW" "💡 Please check the IP address and try again"
    exit 1
fi

# Test SSH connection
print_status "$BLUE" "🔑 Testing SSH connection..."
if ssh -i "$ssh_key" -o ConnectTimeout=10 -o BatchMode=yes "$imac_user@$imac_host" "echo 'SSH test successful'" >/dev/null 2>&1; then
    print_status "$GREEN" "✅ SSH connection successful"
else
    print_status "$RED" "❌ SSH connection failed"
    print_status "$YELLOW" "💡 Please check:"
    print_status "$YELLOW" "   - SSH is enabled on iMac (System Preferences > Sharing > Remote Login)"
    print_status "$YELLOW" "   - SSH key is set up correctly"
    print_status "$YELLOW" "   - Username is correct"
    exit 1
fi

# Get printer information
print_status "$BLUE" "🖨️  Fetching available printers from iMac..."
printers=$(ssh -i "$ssh_key" "$imac_user@$imac_host" "lpstat -p" 2>/dev/null | grep "printer" | awk '{print $2}')

if [ -n "$printers" ]; then
    print_status "$GREEN" "Available printers:"
    echo "$printers" | while read -r printer; do
        print_status "$GREEN" "  📄 $printer"
    done
    echo ""
    
    read -r -p "Select printer name (default: PIXMA_G4470): " printer_name
    printer_name=${printer_name:-PIXMA_G4470}
else
    print_status "$YELLOW" "⚠️  No printers found on iMac"
    read -r -p "Enter printer name manually: " printer_name
fi

# Get other preferences
read -r -p "Default number of copies (default: 1): " default_copies
default_copies=${default_copies:-1}

read -r -p "Maximum file size in MB (default: 100): " max_file_size
max_file_size=${max_file_size:-100}

# Create configuration file
print_status "$BLUE" "📝 Creating configuration file..."

cat > "$CONFIG_FILE" << EOF
#!/bin/bash

# Print Configuration File
# Generated by setup-print.sh on $(date)

# iMac connection settings
export IMAC_USER="$imac_user"
export IMAC_HOST="$imac_host"
export IMAC_SSH_KEY="$ssh_key"

# Printer settings
export PRINTER_NAME="$printer_name"
export DEFAULT_COPIES=$default_copies

# Print options (optional)
export DEFAULT_OPTIONS=""                 # Default print options (e.g., "media=A4,duplex=long-edge")

# Network settings
export PING_TIMEOUT=3                     # Ping timeout in seconds
export SSH_TIMEOUT=10                     # SSH connection timeout in seconds

# File handling
export MAX_FILE_SIZE_MB=$max_file_size    # Maximum file size to print (MB)
export SUPPORTED_EXTENSIONS="pdf,jpg,jpeg,png,gif,bmp,tiff,doc,docx,txt,rtf"  # Supported file types
EOF

print_status "$GREEN" "✅ Configuration saved to $CONFIG_FILE"

# Test the setup
print_status "$BLUE" "🧪 Testing the setup..."
if "$SCRIPT_DIR/print-to-imac.sh" --check-connection; then
    print_status "$GREEN" "✅ Setup completed successfully!"
    echo ""
    print_status "$BLUE" "📖 Usage examples:"
    print_status "$BLUE" "  $SCRIPT_DIR/print.sh document.pdf"
    print_status "$BLUE" "  $SCRIPT_DIR/print.sh --list-printers"
    print_status "$BLUE" "  $SCRIPT_DIR/print.sh --help"
else
    print_status "$RED" "❌ Setup test failed"
    exit 1
fi




